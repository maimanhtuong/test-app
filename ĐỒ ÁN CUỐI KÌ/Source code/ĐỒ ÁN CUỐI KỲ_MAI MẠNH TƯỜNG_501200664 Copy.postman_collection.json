{
	"info": {
		"_postman_id": "f0931b9f-fbf3-41c1-acda-3465ad34c6d8",
		"name": "ĐỒ ÁN CUỐI KỲ_MAI MẠNH TƯỜNG_501200664 Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register and Login",
			"item": [
				{
					"name": "REGISTER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var res = pm.response.json();\r",
									"    var token = res.access_token;\r",
									"    var email = res.email;\r",
									"    var password = res.password;\r",
									"    pm.collectionVariables.set('token', token);\r",
									"    pm.collectionVariables.set('email', email);\r",
									"    pm.collectionVariables.set('password', password);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"email\":\"tuong1{{$randomUserName}}@gmail.com\",\r\n    \"password\":\"tuong1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "REGISTER with exist email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"tuong1@gmail.com\",\r\n    \"password\":\"tuong1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"    var token = pm.response.json().access_token;\r",
									"    console.log(token);\r",
									"    pm.collectionVariables.set('token', token);\r",
									"    pm.collectionVariables.set\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"tuong1@gmail.com\",\r\n    \"password\":\"tuong1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN  with wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"tuong1wrong@gmail.com\",\r\n    \"password\":\"tuong1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Find User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/finduser/:email",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"finduser",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "GET List of books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//tạo mảng bookIds\r",
									"// var bookIds = _.map(pm.response.json(), 'id');\r",
									"// console.log(bookIds);\r",
									"\r",
									"//set biến mảng bookIds là biến globle\r",
									"// pm.globals.set(\"bookIds\", bookIds);\r",
									"\r",
									"//tạo ra 1 số ngẫu nhiên trong độ dài của mảng bookIds\r",
									"// const randomBookId = Math.floor(Math.random() * bookIds.length+1);\r",
									"// console.log(randomBookId, bookIds[randomBookId]);\r",
									"\r",
									"//set bien bookIds ngau nhien trong collection\r",
									"// pm.collectionVariables.set(\"bookId\",bookIds[randomBookId]);\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"BookIdArray = [];\r",
									"for (var i = 0; i<jsonData.length; i++) {\r",
									"    var BookId = jsonData[i].id;\r",
									"    BookIdArray.push(`${BookId}`)\r",
									"}\r",
									"pm.globals.set('bookIds', BookIdArray);\r",
									"\r",
									"var BookId = Math.floor(Math.random() * (BookIdArray.length + 1) )\r",
									"pm.collectionVariables.set('bookId', BookId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/books",
							"host": [
								"{{url}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Single book",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/books/:bookId",
							"host": [
								"{{url}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "{{bookId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET A book Not Exists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/books/:bookId",
							"host": [
								"{{url}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Order A book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"orderId\", pm.response.json().data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order A book false",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": 2,\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerName\": \"Tuong1 {{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:orderId",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var token = pm.collectionVariables.get(\"token\");",
					"var bearerToken = \"Bearer \" + token;",
					"pm.request.headers.add({key: 'Authorization', value: bearerToken })",
					"console.log(pm.request.headers);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var code = pm.response.code;",
					"",
					"if(code === 200){",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"} else if(code === 204) {",
					"    pm.test(\"Status code is 204\", function () {",
					"        pm.response.to.have.status(204);",
					"    });",
					"} else if(code === 401) {",
					"    pm.test(\"Status code is 401\", function () {",
					"        pm.response.to.have.status(401);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "bookId",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}